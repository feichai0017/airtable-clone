// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id        String   @id @default(cuid())
    clerkId   String?  @unique
    username  String?  @unique
    email     String?
    firstName String?
    lastName  String?
    bases     Base[]
    createdAt DateTime @default(now())
}

model Base {
    id        String   @id @default(cuid())
    name      String
    userId    String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    tables    Table[]
    createdAt DateTime @default(now())
}

model Table {
    id        String   @id @default(cuid())
    name      String
    baseId    String
    base      Base     @relation(fields: [baseId], references: [id], onDelete: Cascade)
    columns   Column[]
    rows      Row[]
    views     View[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Column {
    id      String @id @default(cuid())
    name    String
    type    String
    tableId String
    table   Table  @relation(fields: [tableId], references: [id], onDelete: Cascade)
    order   Int    @default(0)
}

model Row {
    id        String   @id @default(cuid())
    tableId   String
    table     Table    @relation(fields: [tableId], references: [id], onDelete: Cascade)
    order     Int      @default(0)
    data      Json // JSONB field storing all cell data as key-value pairs
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([tableId, order])
    @@index([tableId])
}

model View {
    id            String   @id @default(cuid())
    name          String
    type          String   @default("grid")
    tableId       String
    table         Table    @relation(fields: [tableId], references: [id], onDelete: Cascade)
    filter        Json?
    sort          Json?
    hiddenColumns Json     @default("[]")
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
}
